#! /usr/bin/env ruby

require 'erb'
require 'fileutils'
require 'pathname'

root_dir = Pathname.new(__dir__).join('..')
images_dir = root_dir.join('images')

erb = ERB.new(DATA.read, trim_mode: '-')

node_images = [
  {tag: 'node-16', image: 'node:16.6.2-buster'},
  {tag: 'node-14', image: 'node:14.17.6-buster'},
  {tag: 'node-12', image: 'node:12.22.6-buster'},
]

ruby_images = [
  {tag: 'ruby-3-0', image: 'ruby:3.0.2-buster'},
  {tag: 'ruby-2-7', image: 'ruby:2.7.4-buster'},
  {tag: 'ruby-2-6', image: 'ruby:2.6.7-buster'},
]

[
  *node_images,
  *ruby_images,
  *ruby_images.product(node_images).map {|ruby, node|
    ruby.merge(tag: ruby[:tag] + '--' + node[:tag], node_version: node[:tag].match(/\d+/)[0].to_i)
  },
  {tag: 'rust', image: 'rust:1.54.0-buster'},
  {tag: 'docker', image: 'debian:10.10'},
].each do |x|
  tag = x[:tag]
  image = x[:image]
  node_version = x[:node_version]

  dir = images_dir.join(tag)
  FileUtils.mkdir_p(dir)
  dir.join('Dockerfile').write(erb.result(binding))
end

images_dir.glob('*').select(&:directory?).each do |d|
  FileUtils.cp(images_dir.join('entrypoint.sh'), d)
end

__END__
# DO NOT EDIT
# Generated by bin/generate_dockerfiles
FROM <%= image %>

RUN apt-get update && apt-get install -y sudo less wget

<%- if node_version -%>
RUN apt-get update && curl -fsSL https://deb.nodesource.com/setup_<%= node_version %>.x | bash - \
  && apt-get install -y nodejs

<%- end -%>
ENV KUBECTL_VERSION v1.22.1
RUN wget https://dl.k8s.io/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl -O /usr/bin/kubectl && chmod +x /usr/bin/kubectl

<%- if tag == 'docker' -%>
ENV DOCKER_CLI_VERSION 20.10.8
RUN wget -O- https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz | tar xzv -C /tmp \
  && mv /tmp/docker/docker /usr/bin/docker \
  && rm -rf /tmp/docker

<%- end -%>
RUN echo "ALL ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

COPY --chown=0:0 entrypoint.sh /
RUN mkdir -p /home/user && \
  chgrp -R 0 /home /etc/passwd /etc/group /etc/shadow && \
  chmod -R g=u /home /etc/passwd /etc/group /etc/shadow && \
  chmod +x /entrypoint.sh

ENV HOME /home/user
ENV LANG C.UTF-8
WORKDIR /projects

ENTRYPOINT ["/entrypoint.sh"]
CMD ["tail", "-f", "/dev/null"]
