on:
  pull_request:
    paths:
      - images/**
      - .github/workflows/build-and-push.yaml
    branches:
      - main
  push:
    paths:
      - images/**
      - .github/workflows/build-and-push.yaml
    branches:
      - main

jobs:
  generate-matrix:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          matrix = Pathname.glob('images/*/Dockerfile').map {|f|
            {image: f.parent.basename, prefix: '', raw: ENV['GITHUB_REF'] == 'refs/heads/main' ? 'latest' : '', context: f.parent, latest: 'latest'}
          }
          matrix += Pathname.glob('images/*/*/Dockerfile').map {|f|
            {image: f.parent.parent.basename, prefix: "#{f.parent.basename}--", raw: ENV['GITHUB_REF'] == 'refs/heads/main' ? f.parent.basename : '', context: f.parent, latest: f.parent.basename}
          }
          print '::set-output name=matrix::' + {include: matrix}.to_json
        shell: ruby -r json -r pathname {0}
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs:
      - generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ matrix.image }}
          tags: |
            ${{ matrix.raw }}
            type=ref,event=branch,prefix=${{ matrix.prefix }}
            type=ref,event=pr,prefix=${{ matrix.prefix }}pr-
            type=sha,prefix=${{ matrix.prefix }}sha-
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/${{ matrix.image }}:${{ matrix.latest }}
          cache-to: type=inline
